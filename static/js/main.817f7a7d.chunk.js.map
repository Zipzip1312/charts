{"version":3,"sources":["util/schemas sync /^/.//.*DataSchema/.json$","util/API.js","util/InitialDataState.js","util/DataValidator.js","util/ObjectsCopier.js","util/DataCombiner.js","util/DateFormatter.js","util/messages.js","redux/reducer.js","components/LoginPage.js","theme.js","components/Navigation.js","components/Pending.js","components/ErrorPage.js","util/NumbersFormatter.js","components/InfoCardUpdateDate.js","components/InfoCard.js","components/ServerAlert.js","components/FilterByYearButtons.js","components/PieChart.js","components/GroupedBar.js","components/LineChart.js","components/screens/DownloadsScreen.js","components/screens/ActivityScreen.js","components/screens/SalesScreen.js","components/screens/ScreenComponent.js","App.js","reportWebVitals.js","redux/middleware.js","util/DiffDays.js","redux/store.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","API","axios","create","baseURL","headers","responseType","interceptors","request","use","config","localStorage","getItem","url","error","Promise","reject","data","total","Android","iOS","months","dataByMonths","InitialIncrementsState","days","DataValidator","dataSchema","ajv","Ajv","schema","require","validate","compile","year","hasOwnProperty","call","ObjectsCopier","obj","JSON","parse","stringify","DataCombiner","result","InitialDataState","push","DateFormatter","dateToFormat","Date","toDateString","split","monthName","error419Message","errorNetwork","slice","createSlice","name","initialState","pending","isLoggedIn","dataByYears","dataType","filterByYear","increments","lastUpdateDate","serverError","serverErrorMessage","reducers","setCode","state","action","payload","setItem","setPending","setIsLoggedIn","setData","type","setDataType","setIncrements","resetIncrements","getDataByYear","handleServerError","formerData","removeServerError","actions","fetchAmplitudeData","dispatch","a","get","response","status","message","includes","useStyles","makeStyles","theme","root","display","height","alignItems","justifyContent","input","fontSize","width","marginRight","buttonWrapper","position","padding","LoginPage","classes","useState","isValidCode","setValidCode","useDispatch","handleSubmit","className","noValidate","autoComplete","onSubmit","FormControl","Input","placeholder","value","onChange","event","target","length","autoFocus","required","Button","variant","color","disabled","onClick","createMuiTheme","palette","primary","main","success","green","warning","red","platforms","purple","lightGreen","lightBlue","icons","downloads","active","sales","flexGrow","margin","tab","minHeight","flexDirection","Navigation","useSelector","app","Card","Tabs","indicatorColor","textColor","aria-label","i","Tab","icon","label","progress","Pending","CircularProgress","marginTop","ErrorPage","NumbersFormatter","number","divider","nums","toString","reverse","formatted","bottom","left","transform","textIndent","updateDateInfo","right","hidden","InfoCardUpdateDate","updateDate","daysPassed","yearFilter","maxWidth","fontWeight","top","transition","totalDownloadsHeader","InfoCard","platform","subheader","CardHeader","avatar","Avatar","style","backgroundColor","title","ServerAlert","Alert","severity","FilterByYearButtons","years","filterButtons","Grid","item","xs","PieChart","dataByPlatforms","getLabels","lables","sum","reduce","b","forEach","toFixed","labels","datasets","borderWidth","options","tooltips","enabled","legend","GroupedBar","scales","yAxes","ticks","beginAtZero","LineChart","totalDownloads","fill","pointRadius","pointHoverRadius","block","standout","marginBottom","table","diff","whiteSpace","td","charts","screens","rows","createRow","month","getMonthDiff","currentTotalUsers","monthIndex","formerAndroidUsers","formeriOSUsers","prevYearAndroidUsers","prevYeariOSUsers","AndroidUsers","iOSUsers","unshift","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","scope","ScreenComponent","Screen","marginLeft","App","useEffect","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","store","next","lastDownloadsUpdateDate","freshData","getState","startDate","endDate","oneDay","start","end","setHours","getHours","setMinutes","getMinutes","Math","round","abs","DiffDays","setTimeout","configureStore","reducer","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","CssBaseline","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.817f7a7d.chunk.js","sourcesContent":["var map = {\n\t\"./AmplitudeDataSchema.json\": 219\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 218;","import axios from 'axios'\n\nconst API = axios.create({\n  baseURL: `https://moble.epicentrk.ua/api/`,\n  headers: {\n    'content-type': 'application/json'\n  },\n  responseType: 'json'\n})\n\nAPI.interceptors.request.use(\n  function (config) {\n    // Do something before request is sent\n    const code = localStorage.getItem('amp_code')\n    if (code) config.url += `/${code}`\n    return config\n  },\n  function (error) {\n    // Do something with request error\n    return Promise.reject(error)\n  }\n)\n\nexport default API\n","const data = {\n  total: 0,\n  Android: 0,\n  iOS: 0,\n  months: [],\n  dataByMonths: {\n    Android: [],\n    iOS: []\n  }\n}\n\nexport const InitialIncrementsState = (({ total, Android, iOS }) => ({\n  total,\n  Android,\n  iOS,\n  days: 0\n}))(data)\n\nexport default data\n","import Ajv from 'ajv'\n\nfunction DataValidator(data, dataSchema = 'Amplitude') {\n  const ajv = new Ajv()\n  const schema = require(`./schemas/${dataSchema}DataSchema.json`)\n  const validate = ajv.compile(schema)\n  for (const year in data) {\n    if (Object.hasOwnProperty.call(data, year)) {\n      if (!validate(data[year])) {\n        throw new Error(`${dataSchema} Update Error! Try again later`)\n      }\n    }\n  }\n}\n\nexport default DataValidator\n","function ObjectsCopier(obj) {\n  return JSON.parse(JSON.stringify(obj))\n}\n\nexport default ObjectsCopier\n","import InitialDataState from 'util/InitialDataState'\nimport ObjectsCopier from 'util/ObjectsCopier'\n\nfunction DataCombiner(data) {\n  const result = ObjectsCopier(InitialDataState)\n\n  for (const year in data) {\n    if (Object.hasOwnProperty.call(data, year)) {\n      result.total += data[year].total\n      result.Android += data[year].Android\n      result.iOS += data[year].iOS\n      result.months.push(...data[year].months)\n      result.dataByMonths.Android.push(...data[year].dataByMonths.Android)\n      result.dataByMonths.iOS.push(...data[year].dataByMonths.iOS)\n    }\n  }\n\n  return result\n}\n\nexport default DataCombiner\n","/* eslint-disable no-unused-vars */\nconst DateFormatter = (dateToFormat) => {\n  const date = new Date(dateToFormat)\n  const [dayName, monthName, dayNumber, fullYear] = date\n    .toDateString()\n    .split(' ')\n\n  return dayNumber + ' ' + monthName + ' ' + fullYear\n}\n\nexport default DateFormatter\n","export const dataUpdateFailureMessage =\n  'Ошибка на сервере, данные не обновились!'\nexport const error419Message =\n  'Слишком много запросов, данные не обновились! Повторите через минуту'\nexport const errorNetwork = 'Нет подключения к интернету'\n","import { createSlice } from '@reduxjs/toolkit'\nimport API from 'util/API'\nimport InitialDataState, { InitialIncrementsState } from 'util/InitialDataState'\nimport DataValidator from 'util/DataValidator'\nimport DataCombiner from 'util/DataCombiner'\nimport DateFormatter from 'util/DateFormatter'\nimport { error419Message, errorNetwork } from 'util/messages'\n\nexport const slice = createSlice({\n  name: 'app',\n  initialState: {\n    code: '',\n    pending: true,\n    isLoggedIn: false,\n    data: InitialDataState,\n    dataByYears: {},\n    dataType: 'downloads',\n    filterByYear: 'total',\n    increments: InitialIncrementsState,\n    lastUpdateDate: null,\n    serverError: false,\n    serverErrorMessage: ''\n  },\n  reducers: {\n    setCode: (state, action) => {\n      state.code = action.payload\n      localStorage.setItem('amp_code', action.payload)\n    },\n    setPending: (state, action) => {\n      state.pending = action.payload\n    },\n    setIsLoggedIn: (state, action) => {\n      state.isLoggedIn = action.payload\n    },\n    setData: (state, { payload }) => {\n      state.data = DataCombiner(payload.data)\n      state.dataByYears = payload.data\n      const lastUpdateDate = DateFormatter(new Date())\n      state.lastUpdateDate = lastUpdateDate\n      localStorage.setItem(`amp_last_${payload.type}`, lastUpdateDate)\n    },\n    setDataType: (state, action) => {\n      state.dataType = action.payload\n    },\n    setIncrements: (state, action) => {\n      state.increments = action.payload\n    },\n    resetIncrements: (state) => {\n      state.increments = InitialIncrementsState\n    },\n    getDataByYear: (state, action) => {\n      const year = action.payload\n      if (year in state.dataByYears) {\n        state.data = state.dataByYears[year]\n      } else {\n        state.data = DataCombiner(state.dataByYears)\n      }\n      state.filterByYear = year\n    },\n    handleServerError: (state, action) => {\n      state.serverError = true\n      state.serverErrorMessage = action.payload\n\n      const formerData = JSON.parse(\n        localStorage.getItem(`former_${state.dataType}_data`)\n      )\n      if (formerData) {\n        state.data = formerData\n        state.isLoggedIn = true\n        state.lastUpdateDate = localStorage.getItem(\n          `amp_last_${state.dataType}`\n        )\n      }\n    },\n    removeServerError: (state) => {\n      state.serverError = false\n      state.serverErrorMessage = ''\n    }\n  }\n})\n\nexport const {\n  setCode,\n  setPending,\n  setIsLoggedIn,\n  setData,\n  setIncrements,\n  resetIncrements,\n  getDataByYear,\n  setDataType,\n  handleServerError,\n  removeServerError\n} = slice.actions\n\nexport default slice.reducer\n\nexport function fetchAmplitudeData(type = 'downloads') {\n  return async (dispatch) => {\n    dispatch(setPending(true))\n    dispatch(setDataType(type))\n    dispatch(removeServerError())\n\n    try {\n      const response = await API.get(`app-${type}`)\n      DataValidator(response.data)\n      dispatch(setData({ data: response.data, type }))\n      dispatch(setIsLoggedIn(true))\n    } catch (error) {\n      if (error.response && error.response.status === 403) {\n        dispatch(setIsLoggedIn(false))\n      } else {\n        let message = error.message\n        if (message.includes('429')) message = error419Message\n        if (message.includes('Network Error')) message = errorNetwork\n        dispatch(handleServerError(message))\n      }\n    } finally {\n      dispatch(setPending(false))\n    }\n  }\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport Input from '@material-ui/core/Input'\nimport Button from '@material-ui/core/Button'\nimport LockOpenIcon from '@material-ui/icons/LockOpen'\nimport { useDispatch } from 'react-redux'\nimport { fetchAmplitudeData } from 'redux/reducer'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    fontSize: 32,\n    width: 190,\n    marginRight: 10\n  },\n  buttonWrapper: {\n    position: 'relative',\n    '& > button': {\n      padding: '13px 26px'\n    }\n  }\n}))\n\nexport default function LoginPage() {\n  const classes = useStyles()\n  const [code, setCode] = useState('')\n  const [isValidCode, setValidCode] = useState(false)\n  const dispatch = useDispatch()\n\n  const handleChange = (event) => {\n    const code = event.target.value\n    setCode(code)\n    setValidCode(code.length === 10)\n  }\n\n  const handleSubmit = () => {\n    localStorage.setItem('amp_code', code)\n    dispatch(fetchAmplitudeData())\n  }\n\n  return (\n    <form\n      className={classes.root}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <FormControl>\n        <Input\n          className={classes.input}\n          placeholder=\"CODE\"\n          value={code}\n          onChange={handleChange}\n          autoFocus\n          required={true}\n        />\n      </FormControl>\n      <div className={classes.buttonWrapper}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!isValidCode}\n          onClick={handleSubmit}\n          type=\"submit\"\n        >\n          <LockOpenIcon />\n        </Button>\n      </div>\n    </form>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport {\n  lightGreen,\n  lightBlue,\n  purple,\n  green,\n  red\n} from '@material-ui/core/colors'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport AndroidIcon from '@material-ui/icons/Android'\nimport AppleIcon from '@material-ui/icons/Apple'\nimport HowToRegIcon from '@material-ui/icons/HowToReg'\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#0071d3'\n    },\n    success: {\n      main: green[800]\n    },\n    warning: {\n      main: red[800]\n    },\n    platforms: {\n      total: purple[500],\n      Android: lightGreen[500],\n      iOS: lightBlue[500]\n    }\n  },\n  icons: {\n    total: <GetAppIcon />,\n    Android: <AndroidIcon />,\n    iOS: <AppleIcon />,\n    downloads: <GetAppIcon />,\n    active: <HowToRegIcon />,\n    sales: <AttachMoneyIcon />\n  }\n})\n\nexport default theme\n","import React from 'react'\nimport theme from 'theme'\nimport Card from '@material-ui/core/Card'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchAmplitudeData } from 'redux/reducer'\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    // maxWidth: 300,\n    margin: 'auto auto 1em'\n  },\n  tab: {\n    minHeight: 50,\n    '& .MuiTab-wrapper': {\n      flexDirection: 'row',\n      alignItems: 'flex-start'\n    }\n  }\n})\n\nexport default function Navigation() {\n  const classes = useStyles()\n  const tabs = ['downloads', 'active', 'sales']\n  const dataType = useSelector((state) => state.app.dataType)\n  const dispatch = useDispatch()\n\n  const handleChange = (event, type) => {\n    dispatch(fetchAmplitudeData(type))\n  }\n\n  return (\n    <Card className={classes.root}>\n      <Tabs\n        value={dataType}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        aria-label=\"navigation\"\n      >\n        {tabs.map((tab, i) => (\n          <Tab icon={theme.icons[tab]} value={tab} label={tab} key={i} />\n        ))}\n      </Tabs>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Navigation from 'components/Navigation'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { useSelector } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n  progress: {\n    display: 'flex',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}))\n\nexport default function Pending() {\n  const classes = useStyles()\n  const isLoggedIn = useSelector((state) => state.app.isLoggedIn)\n\n  return (\n    <>\n      {isLoggedIn && <Navigation />}\n      <div className={classes.progress}>\n        <CircularProgress />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\nimport { red } from '@material-ui/core/colors'\nimport { useSelector } from 'react-redux'\n\nconst useStyles = makeStyles({\n  root: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: red[900]\n  },\n  icon: {\n    fontSize: 100\n  },\n  message: {\n    fontSize: 30,\n    marginTop: 30\n  }\n})\n\nexport default function ErrorPage() {\n  const classes = useStyles()\n  const message = useSelector((state) => state.app.serverErrorMessage)\n\n  return (\n    <div className={classes.root}>\n      <ErrorOutlineIcon className={classes.icon} />\n      <div className={classes.message}>{message}</div>\n    </div>\n  )\n}\n","function NumbersFormatter(number, divider = ' ') {\n  const nums = number.toString().split('').reverse()\n  const formatted = [nums[0]]\n  for (let i = 1; i < nums.length; i++) {\n    if (i % 3 === 0) formatted.push(divider)\n    formatted.push(nums[i])\n  }\n  return formatted.reverse()\n}\n\nexport default NumbersFormatter\n","import { useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport theme from 'theme'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    position: 'absolute',\n    bottom: '1em',\n    left: '50%',\n    color: '#9e9e9e',\n    transform: 'translateX(-50%)',\n    textIndent: '3em',\n    fontSize: '.8em'\n  },\n  updateDateInfo: {\n    position: 'absolute',\n    right: 10,\n    bottom: 0,\n    color: theme.palette.success.main\n  },\n  hidden: {\n    display: 'none'\n  }\n})\n\nexport default function InfoCardUpdateDate() {\n  const classes = useStyles()\n  const updateDate = useSelector((state) => state.app.lastUpdateDate)\n  const daysPassed = useSelector((state) => state.app.increments.days)\n  const yearFilter = useSelector((state) => state.app.filterByYear)\n\n  return (\n    <div className={classes.root}>\n      {updateDate}{' '}\n      <span\n        className={\n          daysPassed > 0 && yearFilter === 'total'\n            ? classes.updateDateInfo\n            : classes.hidden\n        }\n      >\n        last <b>{daysPassed}</b> days\n      </span>\n    </div>\n  )\n}\n","import { useSelector } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport Avatar from '@material-ui/core/Avatar'\nimport theme from 'theme'\nimport NumbersFormatter from 'util/NumbersFormatter'\nimport { useDispatch } from 'react-redux'\nimport { fetchAmplitudeData } from 'redux/reducer'\nimport InfoCardUpdateDate from 'components/InfoCardUpdateDate'\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 300,\n    width: '100%',\n    margin: '0 auto 1em',\n    position: 'relative',\n    '& .MuiCardHeader-title': {\n      fontSize: '1.7em',\n      textIndent: '-1em',\n      fontWeight: 500\n    },\n    '& .MuiCardHeader-subheader': {\n      position: 'absolute',\n      right: '1em',\n      top: '50%',\n      transform: 'translateY(-50%)',\n      color: theme.palette.success.main,\n      transition: 'all .3s'\n    }\n  },\n  totalDownloadsHeader: {\n    '& .MuiCardHeader-content': {\n      marginTop: '-1em'\n    }\n  }\n})\n\nexport default function InfoCard({ platform, downloads }) {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const increments = useSelector((state) => state.app.increments[platform])\n  const yearFilter = useSelector((state) => state.app.filterByYear)\n  const dataType = useSelector((state) => state.app.dataType)\n  const subheader =\n    increments !== downloads && increments > 0 && yearFilter === 'total'\n      ? `+${increments}`\n      : false\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        className={platform === 'total' ? classes.totalDownloadsHeader : ''}\n        avatar={\n          <Avatar\n            aria-label=\"recipe\"\n            style={{ backgroundColor: theme.palette.platforms[platform] }}\n            onClick={() =>\n              platform === 'total' && dispatch(fetchAmplitudeData(dataType))\n            }\n          >\n            {theme.icons[platform === 'total' ? dataType : platform]}\n          </Avatar>\n        }\n        title={NumbersFormatter(downloads)}\n        subheader={subheader}\n      />\n      {platform === 'total' && <InfoCardUpdateDate />}\n    </Card>\n  )\n}\n","import React from 'react'\nimport Alert from '@material-ui/lab/Alert'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useSelector } from 'react-redux'\nimport { dataUpdateFailureMessage } from 'util/messages'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '1em'\n  }\n})\n\nexport default function ServerAlert() {\n  const classes = useStyles()\n  const message = useSelector((state) => state.app.serverErrorMessage)\n\n  return (\n    <Alert className={classes.root} severity=\"error\">\n      {message || dataUpdateFailureMessage}\n    </Alert>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getDataByYear } from 'redux/reducer'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ServerAlert from 'components/ServerAlert'\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '1em auto 0',\n    '& > button': {\n      margin: '0 .45em'\n    }\n  }\n})\n\nexport default function FilterByYearButtons() {\n  const classes = useStyles()\n  const years = useSelector((state) => state.app.dataByYears)\n  const yearFilter = useSelector((state) => state.app.filterByYear)\n  const serverError = useSelector((state) => state.app.serverError)\n  const dispatch = useDispatch()\n  const filterButtons = Object.keys(years)\n    .reverse()\n    .map((year, i) => {\n      return (\n        <Button\n          variant={yearFilter === year ? 'contained' : 'outlined'}\n          color=\"primary\"\n          key={i}\n          onClick={() => dispatch(getDataByYear(year))}\n        >\n          {year}\n        </Button>\n      )\n    })\n\n  if (serverError) return <ServerAlert />\n\n  return (\n    <Grid item xs={12}>\n      <div className={classes.root}>\n        <Button\n          variant={yearFilter === 'total' ? 'contained' : 'outlined'}\n          color=\"primary\"\n          onClick={() => dispatch(getDataByYear('total'))}\n        >\n          All\n        </Button>\n        {filterButtons}\n      </div>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Pie } from '@reactchartjs/react-chart.js'\nimport theme from 'theme'\n\nexport default function PieChart({ dataByPlatforms }) {\n  const getLabels = () => {\n    let lables = ['Android', 'iOS']\n    const sum = dataByPlatforms.reduce((a, b) => a + b)\n    lables.forEach((label, i) => {\n      lables[i] =\n        label + ' ' + ((dataByPlatforms[i] / sum) * 100).toFixed(2) + '%'\n    })\n\n    return lables\n  }\n  const data = {\n    labels: getLabels(),\n    datasets: [\n      {\n        label: getLabels(),\n        data: dataByPlatforms,\n        backgroundColor: [\n          theme.palette.platforms.Android,\n          theme.palette.platforms.iOS\n        ],\n        borderWidth: 1\n      }\n    ]\n  }\n\n  const options = {\n    tooltips: {\n      enabled: false\n    },\n    legend: {\n      display: true,\n      reverse: true,\n      onClick: function () {\n        return\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Pie data={data} options={options} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Bar } from '@reactchartjs/react-chart.js'\nimport theme from 'theme'\n\nexport default function GroupedBar({ months, dataByMonths }) {\n  const data = {\n    labels: months,\n    datasets: [\n      {\n        label: 'Android',\n        data: dataByMonths.Android,\n        backgroundColor: theme.palette.platforms.Android\n      },\n      {\n        label: 'iOS',\n        data: dataByMonths.iOS,\n        backgroundColor: theme.palette.platforms.iOS\n      }\n    ]\n  }\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      ]\n    },\n    legend: {\n      display: false\n    }\n  }\n\n  return <Bar data={data} options={options} />\n}\n","import React from 'react'\nimport { Line } from '@reactchartjs/react-chart.js'\nimport { purple } from '@material-ui/core/colors'\n\nexport default function LineChart({ months, dataByMonths }) {\n  const totalDownloads = []\n  for (let i = 0; i < dataByMonths.Android.length; i++) {\n    totalDownloads.push(dataByMonths.Android[i] + dataByMonths.iOS[i])\n  }\n\n  const data = {\n    labels: months,\n    datasets: [\n      {\n        label: '',\n        data: totalDownloads,\n        backgroundColor: purple[500],\n        fill: false,\n        pointRadius: 6,\n        pointHoverRadius: 10\n      }\n    ]\n  }\n\n  const options = {\n    legend: {\n      display: false\n    },\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true\n          }\n        }\n      ]\n    }\n  }\n\n  return <Line data={data} options={options} />\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport InfoCard from 'components/InfoCard'\nimport FilterByYearButtons from 'components/FilterByYearButtons'\nimport PieChart from 'components/PieChart'\nimport GroupedBar from 'components/GroupedBar'\nimport LineChart from 'components/LineChart'\n\nconst useStyles = makeStyles({\n  block: {\n    marginTop: '1.5em'\n  },\n  standout: {\n    marginTop: '1.5em',\n    marginBottom: '1em'\n  }\n})\n\nexport default function DownloadsScreen({ data }) {\n  const classes = useStyles()\n  return (\n    <>\n      <Grid item xs={12} className={classes.standout}>\n        <InfoCard platform=\"total\" downloads={data.total} />\n      </Grid>\n\n      <Grid item xs={12}>\n        <InfoCard platform=\"Android\" downloads={data.Android} />\n      </Grid>\n\n      <Grid item xs={12}>\n        <InfoCard platform=\"iOS\" downloads={data.iOS} />\n      </Grid>\n\n      <FilterByYearButtons />\n\n      <Grid item xs={12} className={classes.block}>\n        <LineChart months={data.months} dataByMonths={data.dataByMonths} />\n      </Grid>\n\n      <Grid item xs={12} className={classes.block}>\n        <GroupedBar months={data.months} dataByMonths={data.dataByMonths} />\n      </Grid>\n\n      <Grid item xs={12} className={classes.standout}>\n        <PieChart dataByPlatforms={[data.Android, data.iOS]} />\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport Paper from '@material-ui/core/Paper'\nimport FilterByYearButtons from 'components/FilterByYearButtons'\nimport theme from 'theme'\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp'\nimport { useSelector } from 'react-redux'\nimport NumbersFormatter from 'util/NumbersFormatter'\nimport Grid from '@material-ui/core/Grid'\nimport LineChart from 'components/LineChart'\nimport PieChart from 'components/PieChart'\n\nconst useStyles = makeStyles({\n  table: {\n    marginTop: '1em',\n    marginBottom: 30\n  },\n  Android: {\n    color: theme.palette.platforms.Android\n  },\n  iOS: {\n    color: theme.palette.platforms.iOS\n  },\n  total: {\n    color: theme.palette.platforms.total\n  },\n  diff: {\n    color: theme.palette.primary.main\n  },\n  months: {\n    width: 70,\n    padding: 10,\n    whiteSpace: 'nowrap'\n  },\n  td: {\n    padding: 6,\n    whiteSpace: 'nowrap'\n  },\n  success: {\n    color: theme.palette.success.main,\n    fontWeight: 700\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    fontWeight: 700\n  },\n  charts: {\n    marginBottom: 30\n  }\n})\n\nexport default function ActivityScreen({ data }) {\n  const classes = useStyles()\n  const dataByYears = useSelector((state) => state.app.dataByYears)\n  const year = useSelector((state) => state.app.filterByYear)\n\n  const rows = []\n  const createRow = (month, Android, iOS, total, diff, color) => {\n    return { month, Android, iOS, total, diff, color }\n  }\n  const getMonthDiff = (currentTotalUsers, monthIndex) => {\n    let formerAndroidUsers = data.dataByMonths.Android[monthIndex - 1]\n    let formeriOSUsers = data.dataByMonths.iOS[monthIndex - 1]\n    if (monthIndex === 0 && year !== 'total' && year > 2019) {\n      const prevYearAndroidUsers = dataByYears[year - 1].dataByMonths.Android\n      const prevYeariOSUsers = dataByYears[year - 1].dataByMonths.iOS\n      formerAndroidUsers = prevYearAndroidUsers[prevYearAndroidUsers.length - 1]\n      formeriOSUsers = prevYeariOSUsers[prevYeariOSUsers.length - 1]\n    }\n    return currentTotalUsers - (formerAndroidUsers + formeriOSUsers) || ''\n  }\n\n  for (let i = 0; i < data.months.length; i++) {\n    const month = data.months[i]\n    const AndroidUsers = data.dataByMonths.Android[i]\n    const iOSUsers = data.dataByMonths.iOS[i]\n    const total = AndroidUsers + iOSUsers\n    const diff = getMonthDiff(total, i)\n    rows.unshift(\n      createRow(\n        month,\n        AndroidUsers,\n        iOSUsers,\n        total,\n        diff,\n        diff > 0 ? 'success' : 'warning'\n      )\n    )\n  }\n\n  return (\n    <>\n      <FilterByYearButtons />\n      <TableContainer component={Paper} className={classes.table}>\n        <Table size=\"small\" aria-label=\"activity table\">\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell align=\"center\" className={classes.Android}>\n                {theme.icons.Android}\n              </TableCell>\n              <TableCell align=\"center\" className={classes.iOS}>\n                {theme.icons.iOS}\n              </TableCell>\n              <TableCell align=\"center\" className={classes.total}>\n                {theme.icons.active}\n              </TableCell>\n              <TableCell align=\"center\" className={classes.diff}>\n                {<TrendingUpIcon />}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.month}>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  className={classes.months}\n                >\n                  {row.month}\n                </TableCell>\n                <TableCell align=\"center\" className={classes.td}>\n                  {NumbersFormatter(row.Android)}\n                </TableCell>\n                <TableCell align=\"center\" className={classes.td}>\n                  {NumbersFormatter(row.iOS)}\n                </TableCell>\n                <TableCell align=\"center\" className={classes.td}>\n                  {NumbersFormatter(row.total)}\n                </TableCell>\n                <TableCell\n                  align=\"center\"\n                  className={`${classes.td} ${classes[row.color]}`}\n                >\n                  {row.color === 'success' && '+'}\n                  {NumbersFormatter(row.diff)}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Grid item xs={12} className={classes.charts}>\n        <LineChart months={data.months} dataByMonths={data.dataByMonths} />\n      </Grid>\n\n      <Grid item xs={12} className={classes.charts}>\n        <PieChart dataByPlatforms={[data.Android, data.iOS]} />\n      </Grid>\n    </>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport InfoCard from 'components/InfoCard'\nimport FilterByYearButtons from 'components/FilterByYearButtons'\nimport PieChart from 'components/PieChart'\nimport GroupedBar from 'components/GroupedBar'\nimport LineChart from 'components/LineChart'\n\nconst useStyles = makeStyles({\n  block: {\n    marginTop: '1.5em'\n  },\n  standout: {\n    marginTop: '1.5em',\n    marginBottom: '1em'\n  }\n})\n\nexport default function SalesScreen({ data }) {\n  const classes = useStyles()\n  return (\n    <>\n      <Grid item xs={12} className={classes.standout}>\n        <InfoCard platform=\"total\" downloads={data.total} />\n      </Grid>\n\n      <Grid item xs={12}>\n        <InfoCard platform=\"Android\" downloads={data.Android} />\n      </Grid>\n\n      <Grid item xs={12}>\n        <InfoCard platform=\"iOS\" downloads={data.iOS} />\n      </Grid>\n\n      <FilterByYearButtons />\n\n      <Grid item xs={12} className={classes.block}>\n        <LineChart months={data.months} dataByMonths={data.dataByMonths} />\n      </Grid>\n\n      {/* <Grid item xs={12} className={classes.block}>\n        <GroupedBar months={data.months} dataByMonths={data.dataByMonths} />\n      </Grid>\n\n      <Grid item xs={12} className={classes.standout}>\n        <PieChart dataByPlatforms={[data.Android, data.iOS]} />\n      </Grid> */}\n    </>\n  )\n}\n","import React from 'react'\nimport DownloadsScreen from 'components/screens/DownloadsScreen'\nimport ActivityScreen from 'components/screens/ActivityScreen'\nimport SalesScreen from 'components/screens/SalesScreen'\n\nconst screens = {\n  downloads: DownloadsScreen,\n  active: ActivityScreen,\n  sales: SalesScreen\n}\n\nexport default function ScreenComponent({ type, data }) {\n  const Screen = screens[type]\n\n  return <Screen data={data} />\n}\n","import './App.css'\nimport { useEffect } from 'react'\nimport LoginPage from './components/LoginPage'\nimport Pending from './components/Pending'\nimport Navigation from './components/Navigation'\nimport ErrorPage from './components/ErrorPage'\nimport ScreenComponent from './components/screens/ScreenComponent'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchAmplitudeData } from './redux/reducer'\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: '600px',\n    marginLeft: 'auto',\n    marginRight: 'auto'\n  }\n})\n\nfunction App() {\n  const classes = useStyles()\n\n  const pending = useSelector((state) => state.app.pending)\n  const data = useSelector((state) => state.app.data)\n  const dataType = useSelector((state) => state.app.dataType)\n  const isLoggedIn = useSelector((state) => state.app.isLoggedIn)\n  const serverError = useSelector((state) => state.app.serverError)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchAmplitudeData())\n  }, [dispatch])\n\n  if (pending) return <Pending />\n  if (!isLoggedIn) {\n    return !serverError ? <LoginPage /> : <ErrorPage />\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12}>\n          <Navigation />\n        </Grid>\n\n        <ScreenComponent type={dataType} data={data} />\n      </Grid>\n      <br />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { setIncrements, resetIncrements, getDataByYear } from 'redux/reducer'\nimport ObjectsCopier from 'util/ObjectsCopier'\nimport { InitialIncrementsState } from 'util/InitialDataState'\nimport DiffDays from 'util/DiffDays'\n\nconst middleware = (store) => (next) => (action) => {\n  const lastDownloadsUpdateDate =\n    localStorage.getItem('amp_last_downloads') || new Date()\n  next(action)\n\n  if (action.type === 'app/setData') {\n    const type = action.payload.type\n    const increments = ObjectsCopier(InitialIncrementsState)\n    const freshData = store.getState().app.data\n    const formerData = JSON.parse(localStorage.getItem(`former_${type}_data`))\n\n    if (formerData) {\n      for (let platform of Object.keys(increments)) {\n        increments[platform] = freshData[platform] - formerData[platform]\n      }\n      increments.days = DiffDays(lastDownloadsUpdateDate)\n    }\n\n    store.dispatch(setIncrements(increments))\n\n    localStorage.setItem(`former_${type}_data`, JSON.stringify(freshData))\n\n    const filterByYear = store.getState().app.filterByYear\n    if (filterByYear !== 'total') {\n      store.dispatch(getDataByYear(filterByYear))\n    }\n\n    /** reset increments after 5 minutes */\n    setTimeout(() => {\n      store.dispatch(resetIncrements())\n    }, 1000 * 60 * 5)\n  }\n}\n\nexport default middleware\n","export default function DiffDays(startDate, endDate = new Date()) {\n  const oneDay = 24 * 60 * 60 * 1000 // hours*minutes*seconds*milliseconds\n  const start = new Date(startDate)\n  const end = new Date(endDate)\n  start.setHours(end.getHours())\n  start.setMinutes(end.getMinutes())\n\n  return Math.round(Math.abs((start - end) / oneDay))\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport reducer from 'redux/reducer'\nimport middleware from 'redux/middleware'\n\nexport default configureStore({\n  reducer: {\n    app: reducer\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(middleware)\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <div className=\"App\">\n          <App />\n        </div>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}